formatter {
  interface = "formatter"
  interface = ${?FORMATTER_INTERFACE}
  port = "8080"
  port = ${?FORMATTER_PORT}
}

publisher {
  interface = "publisher"
  interface = ${?PUBLISHER_INTERFACE}
  port = "8080"
  port = ${?PUBLISHER_PORT}
}

app{
  interface = "0.0.0.0"
  interface = ${?INTERFACE}
  port = "8080"
  port = ${?PORT}
}

akka {

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "ERROR"
  loglevel = ${?LOGLEVEL}

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "ERROR"
  stdout-loglevel = ${?STDOUT_LOGLEVEL}

  # Filter of log events that is used by the LoggingAdapter before
  # publishing log events to the eventStream.
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    #Options: local, remote or cluster
    provider = "local"

    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 10
    }
  }

}